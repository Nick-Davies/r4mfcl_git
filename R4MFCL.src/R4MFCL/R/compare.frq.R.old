compare.frq <-
function(file1,file2,fm,plotname,fdesc="") {
##function(file1,file2,fm="all",plotname,fdesc="") {
# Based on code by Adam Langley
# fm is the fisheries to compare, in two rows
# Change 9-Jun-09 SDH added option to read in fishery description - see example below
#fdesc <- data.frame(num=1:30,
#  method=c("L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","L","T","T","D","D","L","L"),
#  flag=c("JP","KR","TWDW","AU","NC","FJ","OT","JP","KR","TWDW","AS/WS","TO","PF","OT","JP","KR","TWDW","AU","NZ","OT","JP","KR","TWDW","OT","ALL","ALL","ALL","ALL","ALL","ALL"),
#  reg=c(1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,4,4,4,4,3,4,3,4,5,6))
# Changed 31-11-2010 SDH to sort frq on yr & mon, + simplify

##first file
a <- read.frq(file1)
fdesc <- as.matrix(fdesc)
mat <- as.data.frame(a$mat)[,1:6]
mat$tstep <- mat[,1] + mat[,2]/12

##second file
a <- read.frq(file2)
mat2 <- as.data.frame(a$mat)[,1:6]
mat2$tstep <- mat2[,1] + mat2[,2]/12

##fisheries
fish1 <- sort(unique(mat[,4]))
fish2 <- sort(unique(mat2[,4]))

if(missing(fm)) fm <- rbind(sort(unique(mat[,4])),sort(unique(mat2[,4])))
for(i in 1:dim(fm)[2]){
#i <- 1
par(mfrow=c(3,1), mar=c(2,4,2,2))
##catch
#browser()
a1 <- mat[mat[,4] == fish1[fm[1,i]],]
a2 <- mat2[mat2[,4] == fish2[fm[2,i]],]
a1 <- a1[order(a1[,1],a1[,2]),]
a2 <- a2[order(a2[,1],a2[,2]),]
ymax <- max(a1[,5], a2[,5])
plot(a1$tstep, a1[,5], type="l", xlim=range(c(mat[,1],mat2[,1])),ylim=c(-1,ymax), ylab="Catch", xlab="")
lines(a2$tstep, a2[,5], lty=2, col=2)
ti <- paste("Plot",i,"Fishery", fish1[fm[1,i]], "& Fishery", fish2[fm[2,i]])
if (dim(fdesc)[1]>1) { ti <- paste(c("Fishery", i, "-",fdesc[i,2:4]),collapse=" ") }
mtext(side=3, line=0.5, ti)
##effort
ymax <- max(a1[,6], a2[,6])
plot(a1$tstep, a1[,6], type="l", xlim=range(c(mat[,1],mat2[,1])),ylim=c(-1,ymax), ylab="Effort", xlab="")
lines(a2$tstep, a2[,6], lty=2, col=2)
##CPUE
cpue1 <- a1[,5]/a1[,6]
cpue2 <- a2[,5]/a2[,6]
cpue1[is.na(cpue1)] <- 0; cpue2[is.na(cpue2)] <- 0
plot(a1$tstep, cpue1, type="l", xlim=range(c(mat[,1],mat2[,1])),ylim=c(0,max (cpue1, cpue2)), ylab="CPUE", xlab="")
lines(a2$tstep, cpue2, lty=2, col=2)
savePlot(paste(c(plotname,"plot",i),collapse="_"),type="png")
}
}
